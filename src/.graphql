query Nodes($map: Float!) {
  nodes(map: $map) {
    id
    mapId
    alias
    posX
    posY
    system {
      id
      regionId
      constellationId
      systemName
      class
      effect
      trueSec
      statics {
        id
        name
        sourceClasses
        targetClass
        lifetime
        maxMass
        massRegen
        maxOnePass
        scanStrength
      }
    }
  }
}

query Connections($map: Float!) {
  connections(map: $map) {
    id
    mapId
    source
    target
    createdAt
    updatedAt
  }
}

query App($map: Float!) {
  connections: connections(map: $map) {
    id
    mapId
    source
    target
    createdAt
    updatedAt
  }

  nodes: nodes(map: $map) {
    id
    mapId
    alias
    posX
    posY
    system {
      id
      regionId
      constellationId
      systemName
      class
      effect
      trueSec
      statics {
        id
        name
        sourceClasses
        targetClass
        lifetime
        maxMass
        massRegen
        maxOnePass
        scanStrength
      }
    }
  }
}

mutation AddNode($map: Float!, $system: Float!) {
  addNode(map: $map, system: $system) {
    id
    mapId
    alias
    posX
    posY
    systemId
    system {
      id
      regionId
      constellationId
      systemName
      class
      effect
      trueSec
      statics {
        id
        name
        sourceClasses
        targetClass
        lifetime
        maxMass
        massRegen
        maxOnePass
        scanStrength
      }
    }
  }
}

mutation DeleteNode($systemId: Float!) {
  deleteNodeBySystem(systemId: $systemId) {
    id
  }
}

mutation AddConnection($map: Float!, $source: String!, $target: String!) {
  addConnection(map: $map, source: $source, target: $target) {
    id
    mapId
    source
    target
    createdAt
    updatedAt
  }
}

mutation RemoveConnection($map: Float!, $source: String!, $target: String!) {
  removeConnection(map: $map, source: $source, target: $target) {
    id
  }
}

mutation DeleteConnectionByNode($nodeId: String!) {
  removeConnectionsByNode(nodeId: $nodeId) {
    id
  }
}

mutation MoveNode($id: String!, $posX: Float!, $posY: Float!) {
  moveNode(id: $id, posX: $posX, posY: $posY) {
    id
    posX
    posY
  }
}

subscription Watch($mapId: Float!) {
  subscribe(mapId: $mapId) {
    type
    node {
      id
      mapId
      alias
      posX
      posY
      system {
        id
        regionId
        constellationId
        systemName
        class
        effect
        trueSec
        statics {
          id
          name
          sourceClasses
          targetClass
          lifetime
          maxMass
          massRegen
          maxOnePass
          scanStrength
        }
      }
    }
    connection {
      id
      mapId
      source
      target
      createdAt
      updatedAt
    }
  }
}
